#include <OneWire.h>
#include <DallasTemperature.h>
#include <Wire.h>
#include "RTClib.h"

#if defined(ARDUINO_ARCH_SAMD)  // for Zero, output on USB Serial console
   #define Serial SerialUSB
#endif

RTC_DS1307 rtc;

char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);

// Data wire is plugged into port 2 on the Arduino
#define ONE_WIRE_BUS 2   //Temp Sensor Pin

const byte lightsRelay = 22; //Relay 1
const byte pumpRelay   = 24; //Relay 2 
const byte powHeadRelay= 26; //Relay 3
const byte heaterRelay = 28; //Relay 4
const byte atoPumpRelay= 30; //Relay 5

const byte floatSwitch1 = 3;  //Primary
const byte floatSwitch2 = 4;  //Backup
const byte buttonLights = 5;  //lights over ride

int targetTemp = 78;
int MAXTEMP    = 80;

int buttonLightsState = 0;

/*************************SETUP**********************************************/
void setup(void)
{
  // start serial port
while (!Serial);  

  Serial.begin(57600);
  if (! rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  }
  // Start up the library
  sensors.begin();

  if (! rtc.isrunning()) {
    Serial.println("RTC is NOT running!");
    // following line sets the RTC to the date & time this sketch was compiled
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
    // This line sets the RTC with an explicit date & time, for example to set
    // January 21, 2014 at 3am you would call:
    // rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));
  }
  pinMode(lightsRelay, OUTPUT);
  pinMode(heaterRelay, OUTPUT);
  pinMode(pumpRelay, OUTPUT);
  pinMode(atoPumpRelay, OUTPUT);
  pinMode(powHeadRelay, OUTPUT);
  digitalWrite(lightsRelay, HIGH);
  digitalWrite(heaterRelay, HIGH);
  digitalWrite(pumpRelay, HIGH);
  digitalWrite(atoPumpRelay, HIGH);
  digitalWrite(powHeadRelay, HIGH);
  
  pinMode(floatSwitch1, INPUT);
  pinMode(floatSwitch2, INPUT);
  digitalWrite(FloatSwitch1, HIGH);
  digitalWrite(FloatSwitch2, HIGH);

}

/*******************************Main Loop******************************/
void loop(void)
{ 
    DateTime now = rtc.now();
    Serial.print(now.hour(), DEC);
    Serial.print(':');
    Serial.print(now.minute(), DEC);
    Serial.print(':');
    Serial.print(now.second(), DEC);
    Serial.println();


                       /*********************ATO CONTROL************************************/
 if (floatSwitch1 == LOW) {
   atoPumpRelay = LOW;
   Serial.println("Topping off tank");
   delay (10000);
   }

                       /*********************TEMP CONTROL************************************/
  sensors.requestTemperatures(); // Send the command to get temperatures
  Serial.print("Water Temperature is: ");
  currentTemp = (sensors.getTempCByIndex(0)*1.8 +32.0);
  Serial.println(currentTemp);
  delay (3000); 
 
 if (currentTemp >= targetTemp) {
   heaterRelay = HIGH;
   }
 else{
   heaterRelay = LOW;
   }
 
 if (currentTemp >= MAXTEMP) {
   lightRelay = HIGH;
   Serial.println("Max Temp exceeded, turning off lights");
} 
 
                   /**************************MASTER SCHEDULE*************************************/  
if ((now.hour >= 10) && (now.hour < 18) ) {
  Day ();
  }
  
if ((now.hours >= 19)) {
  Night ();
  }
if ((now.hours <= 9)) {
  Night ();
  }  
}


/***********************************CALLED FUNCTIONS****************************/
void Day(){
  lightRelay = LOW;
  pumpRelay = LOW;
  powHeadRelay = LOW;
}
  
void Night(){
  lightRelay = HIGH;
  pumpRelay = LOW;
  powHeadRelay = LOW;
}  
  
